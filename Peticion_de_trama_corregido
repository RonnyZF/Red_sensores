#include "stdafx.h"
#include <iostream>
#include <windows.h>
#include <stdlib.h>
#include <unistd.h>
//#include <RH_RF69.h>

using namespace std;

int peticion_trama()
{
	int B = 5;
	char PT[4];
	char CTS[5];
	char RTS[5] ;
	char ACK_IN[3] ;
	char ACK_OUT[3] ;
	char Malarma[1];
	char TRAMA[1]; // trama de alarma
	int contador_p = {0};

	enum state { primera_fase, segunda_fase, escucha, verificacion };
	enum state current_state = primera_fase;




	while (current_state != verificacion)
	{
		switch (current_state)
		{
		case primera_fase:
		{
             escucha(2*B);
			if (CTS == 0 and RTS == 0) // si CTS o RTS estan activos
			{
               PT[0] = 240;
               PT[1]=48;
               PT[2]=nvpertenencia;
               PT[3]=mac;
               rf69.send(PT, sizeof(PT)); // asi se envia un dato

               //oPT = 1; ///enviar PT, send rx.
               escucha(2*B);
               if (RTS != 0)
               current_state = segunda_fase;
               else
               hibernacion();
               }
			break;
		}



		case segunda_fase:
		{
             escucha(2*B);
             if(CTS == 0)
             {
                    CTS[0]=243;
                    CTS[1]=0;
                    CTS[2]=nvpertenencia;
                    CTS[3]=5; //Se define una trama de tama√±o 5
                    CTS[4]=mac;
                    rf69.send(CTS, sizeof(CTS));
                    //oCTS = 1;
			        current_state = segunda_fase;
             }
			break;
		}
		case escucha:
			{
				escucha(2*B); //tiempo de espera 2B
				if (TRAMA!=0)	{
					current_state = verificacion;
				}
				else 	{
					//TRAMA=000;
					///strncpy(TRAMA, "00000", 5);
					current_state = primera_fase;
				}
				break;
			}
		case verificacion:
		{
             ACK_OUT[1] = 245;
						 ACK_OUT[2] = 245;
						 ACK_OUT[3] = 245;
			//ACK_OUT = 1232;
			//strncpy(ACK_OUT, "1232", 4);
			Malarma = TRAMA;
			escucha(2*B); //tiempo de espera 2B

			if (Malarma == TRAMA)
			{

				//guardar trama en la pila;
				current_state = primera_fase;
			}
			break;
		}
	}
    return 0;
}
}

